name: Release Builds to Production

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Select services to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ClaimService
          - ConsentService
          - LocationService
          - MedicationService
          - MedicationDispenseService
          - MedicationRequestService
          - MedicationStatementService
          - PatientService
          - PractitionerService
      environment:
        description: 'Deploy from'
        required: true
        default: 'vc1'
        type: choice
        options:
          - vc1

env:
  PROD_TAG: prd

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - id: set-matrix
        # Creates the matrix values from the input, replacing the string "all" with a list of all services
        run: echo "matrix={\"service\":[\"${{ inputs.service }}\"]}" | sed -r 's/\"all\"/\"ClaimService\", \"ConsentService\", \"LocationService\", \"MedicationService\", \"MedicationDispenseService\", \"MedicationRequestService\", \"MedicationStatementService\", \"PatientService\", \"PractitionerService\"/' >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    environment: review-required
    needs: prepare-matrix

    strategy:
      matrix: ${{ fromJSON(needs.prepare-matrix.outputs.matrix) }}

    steps:
      # Set up the OpenShift CLI tools required. Note, these used to be included with earlier runner images but that is no longer guaranteed so they must be installed.
      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          kam: "latest"
          oc: "4"
      
      - name: OpenShift Gold Login
        if: inputs.service == 'all' || inputs.service == matrix.service
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.GOLD_URI }}
          openshift_token: ${{ secrets.GOLD_TOKEN }}
          namespace: ${{ secrets.GOLD_TOOLS_NAMSPACE }}

      - name: Tag and Push ${{ matrix.service }} to Production in Gold
        if: inputs.service == 'all' || inputs.service == matrix.service
        run: |
          imageName=${{ secrets.GOLD_IMAGE_REPOSITORY }}/${{ secrets.GOLD_TOOLS_NAMESPACE }}/$(echo ${{ matrix.service }} | tr '[:upper:]' '[:lower:]')
          docker login -u ${{ secrets.OPENSHIFT_USER }} -p `oc whoami --show-token` ${{ secrets.GOLD_IMAGE_REPOSITORY }}
          docker pull $imageName:${{ inputs.environment }}
          docker tag $imageName:${{ inputs.environment }} $imageName:${{ env.PROD_TAG }}
          docker push $imageName:${{ env.PROD_TAG }}

      - name: OpenShift Gold DR Login
        if: inputs.service == 'all' || inputs.service == matrix.service
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.GOLDDR_URI }}
          openshift_token: ${{ secrets.GOLDDR_TOKEN }}
          namespace: ${{ secrets.GOLDDR_TOOLS_NAMSPACE }}

      - name: Tag and Push ${{ matrix.service }} to Production in Gold DR
        if: inputs.service == 'all' || inputs.service == matrix.service
        run: |
          srcImageName=${{ secrets.GOLD_IMAGE_REPOSITORY }}/${{ secrets.GOLD_TOOLS_NAMESPACE }}/$(echo ${{ matrix.service }} | tr '[:upper:]' '[:lower:]')
          dstImageName=${{ secrets.GOLDDR_IMAGE_REPOSITORY }}/${{ secrets.GOLDDR_TOOLS_NAMESPACE }}/$(echo ${{ matrix.service }} | tr '[:upper:]' '[:lower:]')
          docker tag $srcImageName:${{ inputs.environment }} $dstImageName:${{ env.PROD_TAG }}
          docker login -u ${{ secrets.OPENSHIFT_USER }} -p `oc whoami --show-token` ${{ secrets.GOLDDR_IMAGE_REPOSITORY }}
          docker push $dstImageName:${{ env.PROD_TAG }}
