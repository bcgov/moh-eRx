name: Build and Deploy Services

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Select services to deploy'
        required: true
        default: 'all'
        type: choice
        options:
#          - all
          - ClaimService
          - ConsentService
          - LocationService
          - MedicationService
          - MedicationDispenseService
          - MedicationRequestService
          - MedicationStatementService
          - PatientService
          - PractitionerService
      environment:
        description: 'Deploy to'
        required: true
        default: 'vc1'
        type: choice
        options:
          - vc1
#          - prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source"
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0

      - name: Building ${{ inputs.service }}
        run: |
          buildid=$(date +"%Y%m%d").$GITHUB_RUN_ID.$GITHUB_RUN_NUMBER.$GITHUB_RUN_ATTEMPT
          echo Starting C# Build as $buildid
          dotnet publish $GITHUB_WORKSPACE/Services/${{ inputs.service }}/src/${{ inputs.service }}.csproj -o $RUNNER_TEMP -c Release
          echo Starting Docker Build
          imageName=${{ secrets.GOLD_IMAGE_REPOSITORY }}/${{ secrets.GOLD_TOOLS_NAMESPACE }}/$(echo ${{ inputs.service }} | tr '[:upper:]' '[:lower:]')
          docker build -f $GITHUB_WORKSPACE/Services/${{ inputs.service }}/src/Dockerfile $RUNNER_TEMP -t $imageName:${{ inputs.environment }}

      - name: OpenShift Gold Login
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{ secrets.GOLD_URI }}
          openshift_token: ${{ secrets.GOLD_TOKEN }}
          namespace: ${{ secrets.GOLD_TOOLS_NAMSPACE }}

      - name: Pushing ${{ inputs.service }} to Gold
        run: |
          imageName=${{ secrets.GOLD_IMAGE_REPOSITORY }}/${{ secrets.GOLD_TOOLS_NAMESPACE }}/$(echo ${{ inputs.service }} | tr '[:upper:]' '[:lower:]')
          docker login -u ${{ secrets.OPENSHIFT_USER }} -p `oc whoami --show-token` ${{ secrets.GOLD_IMAGE_REPOSITORY }}
          docker push $imageName:${{ inputs.environment }}

      - name: OpenShift Gold DR Login
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{ secrets.GOLDDR_URI }}
          openshift_token: ${{ secrets.GOLDDR_TOKEN }}
          namespace: ${{ secrets.GOLDDR_TOOLS_NAMSPACE }}

      - name: Tag and Push ${{ inputs.service }} to Gold DR
        run: |
          srcImageName=${{ secrets.GOLD_IMAGE_REPOSITORY }}/${{ secrets.GOLD_TOOLS_NAMESPACE }}/$(echo ${{ inputs.service }} | tr '[:upper:]' '[:lower:]')
          dstImageName=${{ secrets.GOLDDR_IMAGE_REPOSITORY }}/${{ secrets.GOLDDR_TOOLS_NAMESPACE }}/$(echo ${{ inputs.service }} | tr '[:upper:]' '[:lower:]')
          docker tag $srcImageName:${{ inputs.environment }} $dstImageName:${{ inputs.environment }}
          docker login -u ${{ secrets.OPENSHIFT_USER }} -p `oc whoami --show-token` ${{ secrets.GOLDDR_IMAGE_REPOSITORY }}
          docker push $dstImageName:${{ inputs.environment }}
